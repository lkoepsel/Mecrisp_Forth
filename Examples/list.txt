list 
--- Mecrisp-Stellaris RA 2.6.5 --- 2dup 2drop 2swap 2nip 2over 2tuck 2rot 2-rot 2>r 2r> 2r@ 2rdrop d2/ d2* dshr dshl dabs dnegate d- d+ s>d um* m* ud* udm* */ */mod u*/ u*/mod um/mod m/mod ud/mod d/mod d/ f* f/ 2! 2@ du< du> d< d> d0< d0= d<> d= sp@ sp! rp@ rp! dup drop ?dup swap nip over tuck rot -rot pick depth rdepth >r r> r@ rdrop rpick roll -roll and bic or xor * clz ror rol rrotate arshift rshift lshift 0= 0<> 0< true false >= <= < > u>= u<= u< u> <> = min max umax umin move fill @ ! +! h@ h! h+! c@ c! c+! bis! bic! xor! bit@ hbis! hbic! hxor! hbit@ cbis! cbic! cxor! cbit@ cflash! hflash! rom-code rom-data connect-flash enter-xip exit-xip erase-range program-range flush-cache image>spi-offset erase# save# load# save new restart + - 1- 1+ 2- 2+ cell+ negate not shr shl 2* cells 2/ abs u/mod /mod mod / even base binary decimal hex hook-emit hook-key hook-emit? hook-key? hook-pause emit key emit? key? pause serial-emit serial-key serial-emit? serial-key? cexpect accept tib >in current-source setsource source query compare cr bl space spaces [char] char ( \ ." c" s" count ctype type hex. h.s u.s .s words unused registerliteral, call, literal, create does> <builds ['] ' postpone inline, ret, exit recurse state ] [ : ; execute immediate inline compileonly 0-foldable 1-foldable 2-foldable 3-foldable 4-foldable 5-foldable 6-foldable 7-foldable constant 2constant smudge setflags aligned halign align c, h, , ><, string, allot (latest) (dp) forgetram compiletoram? compiletoram compiletoflash addrinflash? addrinram? (create) variable 2variable nvariable buffer: dictionarystart dictionarynext skipstring find hook-find (find) cjump, jump, here flashvar-here then else if ahead repeat while until again begin k j i leave unloop +loop loop do ?do case ?of of endof endcase token parse digit number .digit hold hold< sign #> f#S f# #S # <# f. f.n ud. d. u. . evaluate interpret hook-quit quit eint? eint dint ipsr nop unhandled reset irq-systick irq-fault irq-collection irq-svcall irq-pendsv irq-TIMER_0 irq-TIMER_1 irq-TIMER_2 irq-TIMER_3 irq-PWM_WRAP irq-USBCTRL irq-XIP irq-PIO0_0 irq-PIO0_1 irq-PIO1_0 irq-PIO1_1 irq-DMA_0 irq-DMA_1 irq-IO_BANK0 irq-IO_QSPI irq-SIO_PROC0 irq-SIO_PROC1 irq-CLOCKS irq-SPI0 irq-SPI1 irq-UART0 irq-UART1 irq-ADC_FIFO irq-I2C0 irq-I2C1 irq-RTC --- Flash Dictionary --- +inf -inf floor deg0to360 deg-90to90 numbertable 0to1sqrt sqrt deg2rad rad2deg pi/2 pi/4 sin-coef half-q1-sin-rad cos-coef half-q1-cos-rad q1-sin-rad q1toq4-sin atan-coef base-ivl-atan atan-table 0to1-atan sin cos tan atan asin acos log2-1to2 log2 log10of2 log10 lnof2 ln exp-coef exp-1to1 pow2 1overlnof2 exp ln10overln2 pow10 s>f f>s list disasm-$ disasm-fetch disasm-string name. u.4 u.8 u.ns const. addr. register. opcode? reg. reg16. reg16split. registerlist. imm3. imm5. imm8. imm3<<1. imm5<<1. imm8<<1. imm3<<2. imm5<<2. imm7<<2. imm8<<2. destination-r0 disasm memstamp disasm-step seec see vorneabschneiden ersteszeichen symbolwert registerparser16 registerparser operandenparser label- label-- label--- l-: label-f1 label-f2 label-f3 label-f4 label-f5 label-f6 label-f7 label-f8 check+label l+: remember+jump jump-destination jumps beq bne bcs bcc bmi bpl bvs bvc bhi bls bge blt bgt ble bhs blo b zero-operand wfi sev bl ldr= mov&add add mov single-operand bx blx double-operand ands eors adcs sbcs rors tst orrs muls bics mvns sxtb sxth uxtb uxth rev rev16 revsh movs&cmp movs cmp adds&subs adds subs load&store str strb strh ldr ldrb ldrh signedloads ldrsb ldrsh shifts-imm lsls lsrs asrs lslsr lsrsr asrsr push&pop push pop stmia&ldmia stmia ldmia stackspace boot-task up next-task task-state save-task handler (pause) wake idle stop multitask singletask task-in-list? previous insert remove task: preparetask activate background tasks catch throw TIMEHW TIMELW TIMEHR TIMELR TIMERAWH TIMERAWL cycles delay-cycles us ms u.4 u.2 dump16 dump words4 freememory esc black red green purple blue magenta cyan white grey fuchsia green3 lime navy darkorange grey62 grey82 test_black test_red test_green test_purple test_blue test_magenta test_cyan test_white test_grey test_fuchsia test_green3 test_lime test_navy test_darkorange test_grey62 test_grey82 colors bp IO_BANK0_GPIO0_STATUS IO_BANK0_GPIO0_CTRL SIO_BASE SIO GPIO_IN GPIO_OUT GPIO_OUT_SET GPIO_OUT_CLR GPIO_OUT_XOR GPIO_OE GPIO_OE_SET GPIO_OE_CLR GPIO_OE_XOR GP13 LED minGPIO maxGPIO minTest maxTest padsize GPIO_ctrl .CTRL one_sec half_sec qtr_sec tenth_sec GPIO_F5 GPIO_OUT tog_GPIO high_GPIO low_GPIO blink_GPIO ms_blink_GPIO us_blink_GPIO pad .pad erase_pad endofDict0  ok.
